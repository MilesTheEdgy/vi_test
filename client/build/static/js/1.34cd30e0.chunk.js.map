{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/hocloader/HocLoader.js","views/sdckullanicilar/index.js","components/toggleswitch/ToggleSwitch.js","views/sdckullanicilar/SdcKullanicilar.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","HocLoader","props","absolute","className","isLoading","role","children","relative","filterAndMapAppData","allData","digerIslemApproved","digerIslemSent","digerIslemProcessing","digerIslemRejected","allDataFiltered","filter","obj","service","Number","approvedCount","sentCount","processingCount","rejectedCount","push","routeName","map","mapUsersData","fetchData","date","Date","register_date","toISOString","slice","ID","user_id","Kullanıcı","username","Röl","Kayıt_tarihi","Aktif","active","compare","a","b","ToggleSwitch","id","name","checked","onChange","optionLabels","small","disabled","type","e","target","tabIndex","onKeyDown","keyCode","preventDefault","handleKeyPress","htmlFor","defaultProps","fields","key","_style","width","label","sorter","SdcKullanicilar","history","useHistory","queryPage","useLocation","search","match","currentPage","useState","page","setPage","usersData","setUsersData","loading","setLoading","fetch","method","headers","document","cookie","res","status","json","mappedData","sortedData","sort","updateUserActiveState","userID","useEffect","xl","columnFilter","responsive","items","hover","itemsPerPage","activePage","clickableRows","scopedSlots","item","index","setState","itemID","state","stateCopy","i","findIndex","toggleUserActive","color","variant","shape","size","onClick","onActivePageChange","newPage","pages","doubleArrows","align"],"mappings":"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","file":"static/js/1.34cd30e0.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./loader.css\"\r\n\r\nconst HocLoader = (props) => {\r\n    if (props.absolute)\r\n      return (\r\n        <div >\r\n          <div className={ props.isLoading ? \"loader loader-absolute\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n    else if (props.relative)\r\n      return (\r\n        <div className = \"relativePosition\">\r\n          <div className={ props.isLoading ? \"loader loader-relative\" : \"\"}>\r\n            <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n              {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n            </div>\r\n          </div>\r\n          {\r\n            props.children\r\n          }\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default HocLoader;","\r\n\r\nexport const filterAndMapAppData = (allData) => {\r\n    let digerIslemApproved = 0\r\n    let digerIslemSent = 0\r\n    let digerIslemProcessing = 0\r\n    let digerIslemRejected = 0\r\n    // eslint-disable-next-line\r\n    const allDataFiltered = allData.filter(obj => {\r\n      switch (obj.service) {\r\n        case \"İptal\":\r\n          digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n          digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n          digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n          digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n          break;\r\n        case \"Devir\":\r\n          digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n          digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n          digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n          digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n          break;\r\n        case \"Nakil\":\r\n          digerIslemApproved = digerIslemApproved + Number(obj.approvedCount)\r\n          digerIslemSent = digerIslemSent + Number(obj.sentCount)\r\n          digerIslemProcessing = digerIslemProcessing + Number(obj.processingCount)\r\n          digerIslemRejected = digerIslemRejected + Number(obj.rejectedCount)\r\n          break;\r\n        default:\r\n          return obj\r\n      }\r\n    })\r\n    allDataFiltered.push({\r\n      service: \"Diğer\", \r\n      routeName: \"diger\", \r\n      approvedCount: digerIslemApproved, \r\n      sentCount: digerIslemSent,\r\n      processingCount: digerIslemProcessing,\r\n      rejectedCount: digerIslemRejected\r\n    })\r\n    const allDataMapped = allDataFiltered.map(obj => {\r\n      switch (obj.service) {\r\n        case \"Faturasız\":\r\n          return {\r\n            ...obj,\r\n            routeName: \"faturasiz\"\r\n          }\r\n        case \"Faturalı\":\r\n          return {\r\n            ...obj,\r\n            routeName: \"faturali\"\r\n          }\r\n        case \"DSL\":\r\n          return {\r\n            ...obj,\r\n            routeName: \"DSL\"\r\n          }\r\n        case \"PSTN\":\r\n          return {\r\n            ...obj,\r\n            routeName: \"pstn\"\r\n          }\r\n        case \"Taahüt\":\r\n          return {\r\n            ...obj,\r\n            routeName: \"taahut\"\r\n          }\r\n        case \"Tivibu\":\r\n          return {\r\n            ...obj,\r\n            routeName: \"tivibu\"\r\n          }\r\n        default:\r\n          return obj\r\n      }\r\n    })\r\n    return allDataMapped\r\n}\r\n\r\nexport const mapUsersData = (fetchData) => {\r\n  return fetchData.map(obj => {\r\n    let rawDate = new Date(obj.register_date)\r\n    let date = rawDate.toISOString().slice(0, 10)\r\n    let role = \"\"\r\n    switch (obj.role) {\r\n      case \"admin\":\r\n        role = \"Admin\"\r\n        break;\r\n      case \"dealer\":\r\n        role = \"Bayi\"\r\n        break\r\n      case \"sales_assistant\":\r\n        role = \"Satış Destek\"\r\n        break\r\n      case \"sales_assistant_chef\":\r\n        role = \"Satış Destek Şefi\"\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    return {\r\n        ID: obj.user_id,\r\n        Kullanıcı: obj.username,\r\n        Röl: role,\r\n        Kayıt_tarihi: date,\r\n        Aktif: obj.active\r\n      }\r\n  })\r\n}\r\n\r\nexport const compare = ( a, b ) => {\r\n  if ( a.ID < b.ID ){\r\n    return -1;\r\n  }\r\n  if ( a.ID > b.ID ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ToggleSwitch.scss\";\r\n\r\nconst ToggleSwitch = ({\r\n  id,\r\n  name,\r\n  checked,\r\n  onChange,\r\n  optionLabels,\r\n  small,\r\n  disabled\r\n}) => {\r\n  function handleKeyPress(e) {\r\n    if (e.keyCode !== 32) return;\r\n\r\n    e.preventDefault();\r\n    onChange(!checked);\r\n  }\r\n\r\n  return (\r\n    <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        className=\"toggle-switch-checkbox\"\r\n        id={id}\r\n        checked={checked}\r\n        onChange={(e) => onChange(e.target.checked)}\r\n        disabled={disabled}\r\n      />\r\n      {id ? (\r\n        <label\r\n          className=\"toggle-switch-label\"\r\n          tabIndex={disabled ? -1 : 1}\r\n          onKeyDown={(e) => handleKeyPress(e)}\r\n          htmlFor={id}\r\n        >\r\n          <span\r\n            className={\r\n              disabled\r\n                ? \"toggle-switch-inner toggle-switch-disabled\"\r\n                : \"toggle-switch-inner\"\r\n            }\r\n            data-yes={optionLabels[0]}\r\n            data-no={optionLabels[1]}\r\n            tabIndex={-1}\r\n          />\r\n          <span\r\n            className={\r\n              disabled\r\n                ? \"toggle-switch-switch toggle-switch-disabled\"\r\n                : \"toggle-switch-switch\"\r\n            }\r\n            tabIndex={-1}\r\n          />\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Set optionLabels for rendering.\r\nToggleSwitch.defaultProps = {\r\n  optionLabels: [\"Evet\", \"Hayır\"]\r\n};\r\n\r\nToggleSwitch.propTypes = {\r\n  id: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  optionLabels: PropTypes.array,\r\n  small: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n  CButton\r\n} from '@coreui/react'\r\nimport \"./style.css\"\r\nimport ToggleSwitch from '../../components/toggleswitch/ToggleSwitch'\r\nimport HocLoader from '../hocloader/HocLoader'\r\nimport { compare, mapUsersData } from '.'\r\n\r\nconst fields = [\r\n  { key: 'ID', _style: { width: '20%'} },\r\n  { key: 'Kullanıcı', _style: { width: '20%'} },\r\n  { key: 'Röl', _style: { width: '20%'} },\r\n  { key: \"Kayıt_tarihi\", _style: {width: '20%'}},\r\n  { key: 'Aktif', _style: { width:'20%'}},\r\n  {\r\n    key: 'show_details',\r\n    label: '',\r\n    _style: { width: '1%' },\r\n    sorter: false,\r\n    filter: false\r\n  }\r\n]\r\n\r\nconst SdcKullanicilar = () => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/sayfa=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [usersData, setUsersData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/sdc/kullanicilar?sayfa=${newPage}`)\r\n  }\r\n\r\n  const toggleUserActive = (setState, itemID, state) => {\r\n    // console.log(\"original state\", state)\r\n    const stateCopy = [...state]\r\n    // console.log(\"copied state \", stateCopy)\r\n    const i = stateCopy.findIndex(obj => obj.ID === itemID)\r\n    // console.log(\"itemID \", itemID, \" state\", stateCopy )\r\n    // console.log(\"found index is: \", i)\r\n    stateCopy[i].Aktif = !stateCopy[i].Aktif\r\n    // console.log(\"new 'state' \", stateCopy)\r\n    setState(stateCopy)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    const res = await fetch(\"/sdc/users\", {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n      }\r\n    })\r\n    if (res.status === 200) {\r\n      const fetchData = await res.json()\r\n      const mappedData = mapUsersData(fetchData)\r\n      // *** I had to sort the data here because I couldn't figure out how to default sort it in the coreUI table component below\r\n      const sortedData = mappedData.sort(compare);\r\n      setUsersData(sortedData)\r\n      setLoading(false)\r\n    }\r\n  };\r\n\r\n  const updateUserActiveState = async (userID) => {\r\n    setLoading(true)\r\n    const res = await fetch(`/sdc/user/${userID}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n      }\r\n    })\r\n    if (res.status === 200) {\r\n      fetchData()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage)\r\n\r\n    fetchData();\r\n  }, [currentPage, page])\r\n\r\n  return (\r\n    <HocLoader isLoading = {false} absolute = {true}>\r\n      <CRow className = \"d-flex justify-content-center\">\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Kullanıcılar\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                  columnFilter\r\n                  fields = {fields}\r\n                  loading = {loading}\r\n                  responsive\r\n                  items={usersData}\r\n                  hover\r\n                  itemsPerPage={30}\r\n                  activePage={page}\r\n                  clickableRows\r\n                  // onRowClick={(user) => history.push(`/sdc/kullanici/${user.ID}`)}\r\n                  scopedSlots = {{\r\n                    \"Aktif\":\r\n                      (item, index) => (\r\n                        <td>\r\n                          <ToggleSwitch\r\n                            id={`userActive${item.ID}`}\r\n                            checked={item.Aktif}\r\n                            onChange={() => {\r\n                              toggleUserActive(setUsersData, item.ID, usersData)\r\n                              updateUserActiveState(item.ID)\r\n                              }}\r\n                          />\r\n                        </td>\r\n                      ),\r\n                      'show_details':\r\n                        (item, index)=>{\r\n                          return (\r\n                            <td className=\"py-2\">\r\n                              <CButton\r\n                                color=\"primary\"\r\n                                variant=\"outline\"\r\n                                shape=\"square\"\r\n                                size=\"sm\"\r\n                                onClick={() => history.push(`/sdc/kullanici/${item.ID}`)}\r\n                              >\r\n                                Detailar\r\n                              </CButton>\r\n                            </td>\r\n                            )\r\n                        }\r\n                  }}\r\n              />\r\n              <CPagination\r\n                  activePage={page}\r\n                  onActivePageChange={pageChange}\r\n                  pages={15}\r\n                  doubleArrows={false} \r\n                  align=\"center\"\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </HocLoader>\r\n  )\r\n}\r\n\r\nexport default SdcKullanicilar;\r\n"],"sourceRoot":""}