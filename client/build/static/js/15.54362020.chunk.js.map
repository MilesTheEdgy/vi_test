{"version":3,"sources":["components/loader/Loader.js","views/yenibasvuru/YeniBasvuru.js"],"names":["Loader","props","isloading","className","isLoading","role","MissingInfoModal","reset","useState","modalShow","setModalShow","show","centered","color","borderColor","onClosed","onClick","SubmitApplicationResultText","isSuccess","toasterText","position","autohide","fade","YeniBaşvuruExtraCheckboxes","setClientWantsRouter","row","md","onChange","variant","id","name","value","htmlFor","SelectedOfferComp","selectedService","offers","setOfferValueDSL","selectedOfferEmpty","setSelectedOffer","useEffect","match","custom","disabled","map","offer","index","YeniBasvuru","e","target","setState","clientWantsRouter","selectedOffer","state","isOfferValueDSL","selectedServiceHandler","dslOffers","taahütOffers","tivibuOffers","PSTNOffers","onDescriptionChange","clientDescription","onCustomernameChange","clientName","onSubmitApplication","a","isApplicationSubmitting","image","clientAppFiles","formData","FormData","append","i","length","console","log","fetch","method","headers","document","cookie","slice","body","status","isSubmitSuccess","didApplicationFinishSubmit","resetInput","setTimeout","resetAppStats","areAppFieldsMissing","undefined","loadImage","event","files","images","objURLS","type","indexOf","objURL","URL","createObjectURL","push","clientAppFilesObjURL","onImageUpload","res","json","data","this","xs","action","encType","placeholder","rows","multiple","alt","style","maxWidth","maxHeight","src","size","React","Component"],"mappings":"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","file":"static/js/15.54362020.chunk.js","sourcesContent":["import \"./loader.css\"\r\n\r\nconst Loader = (props) => {\r\n  if (props.isloading) {\r\n    return (\r\n      <div className={ props.isLoading ? \"loader\" : \"\"}>\r\n          <div className={ props.isLoading ? \"spinner-border\" : \"\"} role=\"status\">\r\n            {/* <span className=\"sr-only loader-icon\">Loading...</span> */}\r\n          </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n    <div className=\"loader\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only loader-icon\">Loading...</span>\r\n      </div>\r\n    </div>      \r\n    )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CTextarea,\r\n  CInput,\r\n  CInputRadio,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n  CToaster,\r\n  CToast,\r\n  CToastBody,\r\n  CModal,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CInputFile\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport \"./yenibasvuru.css\";\r\nimport Loader from \"../../components/loader/Loader\"\r\n\r\nconst MissingInfoModal = ({reset}) => {\r\n    const [modalShow, setModalShow] = useState(true)\r\n    return (\r\n        <div className = \"loginerrmodal-body\">\r\n            <CModal\r\n                show={modalShow} \r\n                centered= {true}\r\n                color= \"danger\"\r\n                borderColor = \"danger\"\r\n                onClosed = {() => {\r\n                    setModalShow(false)\r\n                    reset()\r\n                    }}\r\n            >\r\n                <div className = \"loginerrmodal-header\">\r\n                    <CModalTitle className = \"loginerrmodal-title\">HATALI GİRİŞ</CModalTitle>\r\n                </div>\r\n                <CModalBody>\r\n                Başvurunuzda eksik bilgi bulunyor, Lütfen Bilgilerinizi tamamlayınız\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                <CButton \r\n                    color=\"secondary\" \r\n                    onClick={() => {\r\n                        setModalShow(false)\r\n                        reset()\r\n                        }}\r\n                >Kapat\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SubmitApplicationResultText = ({isSuccess, toasterText}) => {\r\n    return (\r\n        <CToaster position=\"top-right\">\r\n            <CToast show={true} autohide={3000} fade={true} color={isSuccess ? \"success\" : \"danger\"} className = \"applicationToaster\">\r\n                <CToastBody>{toasterText}</CToastBody>\r\n            </CToast>\r\n        </CToaster>\r\n    )\r\n} \r\n\r\nconst YeniBaşvuruExtraCheckboxes = ({setClientWantsRouter}) => {\r\n    return (\r\n        <CFormGroup row>\r\n            <CCol md=\"3\">\r\n                <CLabel>Modem istiyor mu?</CLabel>\r\n            </CCol>\r\n            <CCol md=\"9\" onChange = {setClientWantsRouter} >\r\n                <CFormGroup variant=\"checkbox\">\r\n                    <CInputRadio className=\"form-check-input\" id=\"radio1\" name=\"radios\" value=\"option1\" />\r\n                    <CLabel variant=\"checkbox\" htmlFor=\"radio1\">Modem istiyor</CLabel>\r\n                </CFormGroup>\r\n                <CFormGroup variant=\"checkbox\">\r\n                    <CInputRadio className=\"form-check-input\" id=\"radio2\" name=\"radios\" value=\"option2\" />\r\n                    <CLabel variant=\"checkbox\" htmlFor=\"radio2\">Modem istemiyor</CLabel>\r\n                </CFormGroup>\r\n            </CCol>\r\n        </CFormGroup>\r\n    )\r\n}\r\n\r\nconst SelectedOfferComp = ({selectedService, offers, setOfferValueDSL}) => {\r\n    const [selectedOfferEmpty, setSelectedOffer] = useState(false)\r\n     \r\n    useEffect(() => {\r\n        if (selectedService.match(/^(|Devir|İptal|Nakil)$/))\r\n            setSelectedOffer(true)\r\n        // if (selectedService === \"\"\r\n        //  || selectedService === \"Devir\" \r\n        //  || selectedService === \"İptal\" \r\n        //  || selectedService === \"Nakil\") \r\n\r\n        else setSelectedOffer(false)\r\n\r\n        return () => {\r\n            setSelectedOffer(false)\r\n        }\r\n    }, [selectedService])\r\n\r\n    return (\r\n        <CSelect custom name=\"select\" id=\"select\" disabled = {selectedOfferEmpty ? true : false} onChange = {setOfferValueDSL} >\r\n        {\r\n            offers.map((offer, index) => {\r\n                return <option key = {`${index+1}`} >{offer}</option>\r\n            })\r\n        }\r\n        </CSelect>\r\n    )\r\n}\r\n\r\nclass YeniBasvuru extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectedService : \"\",\r\n            selectedOffer: \"\",\r\n            clientWantsRouter: 0,\r\n            clientDescription: \"\",\r\n            clientName: \"\",\r\n            clientAppFiles: null,\r\n            clientAppFilesObjURL: null,\r\n\r\n            offers : [],\r\n            dslOffers : [\r\n                \"\", \"Ahlan\", \"3 Ay Bedava\", \"Fiber Hız Sever\", \"4 Mevsim\"\r\n            ],\r\n            taahütOffers: [\r\n                \"\", \"İnternette Fırsat Kampanyası\", \"Efsane Taahüt Yenileme Kampanyası\", \"En Güzel Taahüt Yenileme Kampanyası\"\r\n            ],\r\n            tivibuOffers: [\r\n                \"\", \"3 Ay Bedava Tivibu\", \"Sinema Paketi\", \"Super Paket\", \"Giriş Paket\"\r\n            ],\r\n            PSTNOffers: [\r\n                \"\", \"Sınırsız Konuş\", \"250DK konuşma Paketi\"\r\n            ],\r\n            isOfferValueDSL: false,\r\n            isApplicationSubmitting: false,\r\n            isSubmitSuccess: undefined,\r\n            toasterText: \"\",\r\n            didApplicationFinishSubmit: false,\r\n\r\n            areAppFieldsMissing: false\r\n        }\r\n    }\r\n\r\n    setClientWantsRouter = (e) => {\r\n        let value = e.target.value\r\n        if (value === \"option1\") this.setState({clientWantsRouter: 1})\r\n        else this.setState({clientWantsRouter: 0})\r\n    }\r\n\r\n    setOfferValueDSL = (e) => {\r\n        let value = e.target.value\r\n        this.setState({selectedOffer: value})\r\n        if (this.state.selectedService === \"DSL\" && value !== \"\")\r\n        this.setState({isOfferValueDSL: true})\r\n        else this.setState({isOfferValueDSL: false})\r\n    }\r\n\r\n    selectedServiceHandler = (e) => {\r\n        let value = e.target.value\r\n        const { dslOffers, taahütOffers, tivibuOffers, PSTNOffers } = this.state;\r\n        this.setState({selectedService: value}) \r\n        switch (value) {\r\n            case \"DSL\":\r\n                this.setState({offers: dslOffers, isOfferValueDSL: false})\r\n                break;\r\n            case \"Taahüt\":\r\n                this.setState({offers: taahütOffers, isOfferValueDSL: false})\r\n                break;\r\n\r\n            case \"Tivibu\":\r\n                this.setState({offers: tivibuOffers, isOfferValueDSL: false})\r\n                break;\r\n\r\n            case \"PSTN\":\r\n                this.setState({offers: PSTNOffers, isOfferValueDSL: false})\r\n                break;\r\n\r\n            default:\r\n                this.setState({offers: [], isOfferValueDSL: false})\r\n                break;\r\n        };\r\n    }\r\n\r\n    onDescriptionChange = (e) => {\r\n        this.setState({clientDescription: e.target.value});\r\n    }\r\n\r\n    onCustomernameChange = (e) => {\r\n        this.setState({clientName: e.target.value});\r\n\r\n    }\r\n\r\n    onSubmitApplication = async() => {\r\n        this.setState({\r\n            isApplicationSubmitting: true\r\n        })\r\n        const { selectedService, selectedOffer, \r\n            clientWantsRouter, clientDescription,\r\n             clientName} = this.state;\r\n        const image = this.state.clientAppFiles\r\n        const formData = new FormData()\r\n        formData.append(\"selectedService\", selectedService)\r\n        formData.append(\"selectedOffer\", selectedOffer)\r\n        formData.append(\"clientWantsRouter\", clientWantsRouter)\r\n        formData.append(\"clientDescription\", clientDescription)\r\n        formData.append(\"clientName\", clientName)\r\n        for (let i = 0; i < image.length; i++) {\r\n            formData.append(\"image\", image[i])            \r\n        }\r\n        try {\r\n          console.log(\"fetching\")\r\n          const res = await fetch(\"/applications\", {\r\n            method: \"POST\",\r\n            headers: {\r\n            'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n            },\r\n            body: formData\r\n          })\r\n          if (res.status === 200 ) {\r\n            this.setState({\r\n                isSubmitSuccess: true,\r\n                toasterText: \"Talebiniz başarıyla gönderilmiştir!\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isSubmitSuccess: false,\r\n                toasterText: \"Bir sorun oldu, lütfen daha sonra tekrar deneyin\"\r\n            })\r\n        }\r\n        this.setState({isApplicationSubmitting: false, didApplicationFinishSubmit: true})\r\n        this.resetInput();\r\n        setTimeout(() => this.resetAppStats(), 4300)\r\n\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n/////////////////////////////////////////////////\r\n        // const { selectedService, selectedOffer, \r\n        //     clientWantsRouter, clientDescription,\r\n        //      clientName} = this.state;\r\n\r\n        // if (!selectedService || !clientDescription || !clientDescription || !clientName)  {\r\n        //     this.setState({areAppFieldsMissing: true})\r\n        //     console.log(this.state.areAppFieldsMissing)\r\n        //     return\r\n        // }\r\n        // this.setState({isApplicationSubmitting: true})\r\n\r\n        // let res = await fetch(\"/bayi/basvuru/yeni\", {\r\n        // method: 'POST',\r\n        // headers: {\r\n        //     'Content-Type': 'application/json',\r\n        //     'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n        //     },\r\n        // body: JSON.stringify({\r\n        //     selectedService: selectedService,\r\n        //     selectedOffer: selectedOffer,\r\n        //     clientWantsRouter: clientWantsRouter,\r\n        //     clientDescription: clientDescription,\r\n        //     clientName: clientName\r\n        //     }) \r\n        // });\r\n        // if (res.status === 200 ) {\r\n        //     this.setState({\r\n        //         isSubmitSuccess: true,\r\n        //         toasterText: \"Talebiniz başarıyla gönderilmiştir!\"\r\n        //     })\r\n        // } else {\r\n        //     this.setState({\r\n        //         isSubmitSuccess: false,\r\n        //         toasterText: \"Bir sorun oldu, lütfen daha sonra tekrar deneyin\"\r\n        //     })\r\n        // }\r\n\r\n        // this.setState({isApplicationSubmitting: false, didApplicationFinishSubmit: true})\r\n        // this.resetInput();\r\n        // setTimeout(() => this.resetAppStats(), 4300)\r\n\r\n    }\r\n\r\n    resetInput = () => {\r\n        this.setState({\r\n            selectedService : \"\",\r\n            selectedOffer: \"\",\r\n            clientWantsRouter: 0,\r\n            clientDescription: \"\",\r\n            clientName: \"\",\r\n            offers : [],\r\n            isOfferValueDSL: false,\r\n            areAppFieldsMissing: false\r\n        })\r\n    }\r\n\r\n    resetAppStats = () => {\r\n        this.setState({\r\n            isApplicationSubmitting: false,\r\n            isSubmitSuccess: undefined,\r\n            didApplicationFinishSubmit: false\r\n        })\r\n    }\r\n\r\n    loadImage = (event) => {\r\n        if (event.target.files) {\r\n            console.log(\"event.target.files\", event.target.files)\r\n            const images = event.target.files;\r\n            // display error toaster if images total is not 3\r\n            if (images.length !== 3) {\r\n                this.setState({didApplicationFinishSubmit: true})\r\n                this.setState({\r\n                    isSubmitSuccess: false,\r\n                    toasterText: \"Lütfen 3 adet resim seçiniz\"\r\n                })\r\n                return setTimeout(() => this.resetAppStats(), 4300)\r\n            }\r\n            let objURLS = []\r\n            // loop through the images and store image object as temp url in objURLS array\r\n            for (let i = 0; i < images.length; i++) {\r\n                // display error toaster if image is not pdf or jpg\r\n                if (images[i].type.indexOf(\"image\") !== 0) {\r\n                    this.setState({didApplicationFinishSubmit: true})\r\n                    this.setState({\r\n                        isSubmitSuccess: false,\r\n                        toasterText: \"Lütfen seçtiğiniz dosya resim (JPG, PNG) olduğundan emin olun\"\r\n                    })\r\n                    return setTimeout(() => this.resetAppStats(), 4300)\r\n                }\r\n                const objURL = URL.createObjectURL(images[i])\r\n                objURLS.push(objURL)\r\n            }\r\n            this.setState({\r\n                clientAppFiles: images,\r\n                clientAppFilesObjURL: objURLS\r\n            })\r\n        }\r\n    }\r\n\r\n    onImageUpload = async () => {\r\n        const { selectedService, selectedOffer, \r\n            clientWantsRouter, clientDescription,\r\n             clientName} = this.state;\r\n        const image = this.state.clientAppFiles\r\n        const formData = new FormData()\r\n        formData.append(\"selectedService\", \"selectedService\")\r\n        formData.append(\"selectedOffer\", \"selectedOffer\")\r\n        formData.append(\"clientWantsRouter\", \"clientWantsRouter\")\r\n        formData.append(\"clientDescription\", \"clientDescription\")\r\n        formData.append(\"clientName\", \"clientName\")\r\n        for (let i = 0; i < image.length; i++) {\r\n            formData.append(\"image\", image[i])            \r\n        }\r\n        try {\r\n          console.log(\"fetching\")\r\n          const res = await fetch(\"/bayi/basvuru/yeni\", {\r\n            method: \"POST\",\r\n            headers: {\r\n            'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n            },\r\n            body: formData\r\n          })\r\n          const data = await res.json()\r\n          console.log(\"data from fetch\", data)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n \r\n    render() {\r\n        const {selectedService, offers, isOfferValueDSL, isApplicationSubmitting, isSubmitSuccess, didApplicationFinishSubmit, clientDescription, clientName, areAppFieldsMissing, toasterText } = this.state;\r\n        return (\r\n            <CRow className = \"d-flex justify-content-center\">\r\n                <CCol xs=\"12\" md=\"8\">\r\n                {\r\n                    isApplicationSubmitting && <Loader/>\r\n                }\r\n                {\r\n                    didApplicationFinishSubmit && <SubmitApplicationResultText isSuccess = {isSubmitSuccess} toasterText = {toasterText} />\r\n                }\r\n                {\r\n                    areAppFieldsMissing ? <MissingInfoModal reset = {this.resetInput} /> : null\r\n                }\r\n                <CCard>\r\n                    <CCardHeader className = \"basvuruFormHeader\">\r\n                    Yeni Başvuru Sayfası\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                    <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"disabled-input\">Aktivasyon</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"disabled-input\" name=\"disabled-input\" placeholder=\"Abdullah Kara\" disabled />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"disabled-input\">Satış Sorumlusu</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"disabled-input\" name=\"disabled-input\" placeholder=\"Erdem Mutlu\" disabled />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"disabled-input\">Bayi</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInput id=\"disabled-input\" name=\"disabled-input\" placeholder=\"EGE İLETİŞİM\" disabled />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"select\">Verilen Hizmet</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CSelect value = {selectedService} custom name=\"select\" id=\"select\" onChange = {this.selectedServiceHandler} >\r\n                                <option></option>\r\n                                <option>DSL</option>\r\n                                <option>Taahüt</option>\r\n                                <option>Tivibu</option>\r\n                                <option>PSTN</option>\r\n                                <option>İptal</option>\r\n                                <option>Nakil</option>\r\n                                <option>Devir</option>\r\n                            </CSelect>\r\n                        </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"select\" >Kampanya Seçimi</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <SelectedOfferComp selectedService = {selectedService} offers = {offers} setOfferValueDSL = {this.setOfferValueDSL} />\r\n                        </CCol>\r\n                        </CFormGroup>\r\n                        {\r\n                            isOfferValueDSL ?\r\n                                <YeniBaşvuruExtraCheckboxes setClientWantsRouter = {this.setClientWantsRouter}/>\r\n                            :\r\n                                null\r\n                        }\r\n                        <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"textarea-input\">Açıklama</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CTextarea \r\n                            name=\"textarea-input\" \r\n                            id=\"textarea-input\" \r\n                            rows=\"9\"\r\n                            placeholder=\"İşlemle alakalı ekstra detaylarınız\"\r\n                            value = {clientDescription}\r\n                            onChange = {this.onDescriptionChange}\r\n                            />\r\n                        </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                        <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"text-input\">Müşteri</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                            <CInput value = {clientName} id=\"text-input\" name=\"text-input\" placeholder=\"\" onChange = {this.onCustomernameChange}/>\r\n                            <CFormText>müşterinin isim soyisimi</CFormText>\r\n                        </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                                <CLabel>Başvuru dosyaları</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                                <CInputFile \r\n                                id=\"file-multiple-input\"\r\n                                name=\"file-multiple-input\"\r\n                                multiple\r\n                                custom\r\n                                onChange = {this.loadImage}\r\n                                />\r\n                                <CLabel htmlFor=\"file-multiple-input\" variant=\"custom-file\">\r\n                                Dosyalarını seç\r\n                                </CLabel>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        {\r\n                        this.state.clientAppFiles === null ?\r\n                        <CFormGroup row>\r\n                            <CCol md=\"4\">\r\n                                <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\"}} src = \"https://res.cloudinary.com/papyum/image/upload/v1629721581/iys/placeholder_fb7gch.png\" />\r\n                            </CCol>\r\n                            <CCol md=\"4\">\r\n                                <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\"}} src = \"https://res.cloudinary.com/papyum/image/upload/v1629721581/iys/placeholder_fb7gch.png\" />\r\n                            </CCol>\r\n                            <CCol md=\"4\">\r\n                                <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\"}} src = \"https://res.cloudinary.com/papyum/image/upload/v1629721581/iys/placeholder_fb7gch.png\" />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        :\r\n                        <CFormGroup row>\r\n                            <CCol md=\"4\">\r\n                                <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\"}} src = {this.state.clientAppFilesObjURL[0]} />\r\n                            </CCol>\r\n                            <CCol md=\"4\">\r\n                                <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\"}} src = {this.state.clientAppFilesObjURL[1]} />\r\n                            </CCol>\r\n                            <CCol md=\"4\">\r\n                                <img alt = \"\" style = {{maxWidth: \"200px\", maxHeight: \"200px\"}} src = {this.state.clientAppFilesObjURL[2]} />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        }\r\n                    </CForm>\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                    <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick = {this.onSubmitApplication} ><CIcon name=\"cil-scrubber\"/> Gönder</CButton>\r\n                    <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick = {this.resetInput}  ><CIcon name=\"cil-ban\"/> Resetle</CButton>\r\n                    </CCardFooter>\r\n                </CCard>\r\n                \r\n                </CCol>\r\n            </CRow>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default YeniBasvuru\r\n"],"sourceRoot":""}