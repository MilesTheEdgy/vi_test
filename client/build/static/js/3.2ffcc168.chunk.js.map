{"version":3,"sources":["components/index.js","views/basvurutakibi/index.js","views/basvurutakibi/BasvuruTakibi.js"],"names":["mapDataToTurkish","fetchData","map","obj","submitDate","Date","submit_time","statusChangeDate","status_change_date","lastChangeDate","last_change_date","submitProcessNum","status","ID","id","İsim","client_name","Tarih","toISOString","slice","Tip","selected_service","Kampanya","selected_offer","Açıklama","description","Statü","salesRepDetails","sales_rep_details","finalSalesRepDetails","final_sales_rep_details","imageURLS","image_urls","getBadge","ApplicationViewModal","props","details","userDetails","size","show","onClose","centered","closeButton","className","xs","sm","row","placeholder","readOnly","rows","color","onClick","BasvuruTakibi","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","history","useHistory","undefined","usersData","setUsersData","modal","setModal","modalData","setModalData","loading","setLoading","useEffect","a","fetch","method","headers","document","cookie","res","json","resData","getData","xl","items","fields","key","_classes","hover","striped","itemsPerPage","activePage","clickableRows","onRowClick","item","scopedSlots","onActivePageChange","newPage","push","pages","doubleArrows","align"],"mappings":"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","file":"static/js/3.2ffcc168.chunk.js","sourcesContent":["export const mapDataToTurkish = (fetchData) => {\r\n    return fetchData.map(obj => {\r\n        let submitDate = new Date(obj.submit_time)\r\n        let statusChangeDate = new Date(obj.status_change_date)\r\n        let lastChangeDate = new Date(obj.last_change_date)\r\n        let submitProcessNum = 0\r\n        let status = \"\"\r\n        if (obj.status === \"approved\") {\r\n          submitProcessNum = 3\r\n          status = \"Onaylandı\"\r\n        }\r\n        else if (obj.status === \"rejected\") {\r\n          submitProcessNum = 3\r\n          status = \"İptal\"\r\n        }\r\n        else if (obj.status === \"processing\") {\r\n          submitProcessNum = 2\r\n          status = \"İşleniyor\"\r\n        }\r\n        else if (obj.status === \"sent\") {\r\n          status = \"Gönderildi\"\r\n          submitProcessNum = 1\r\n        }\r\n        return {\r\n            ID: obj.id,\r\n            İsim: obj.client_name,\r\n            Tarih: submitDate.toISOString().slice(0, 10),\r\n            Tip: obj.selected_service,\r\n            Kampanya: obj.selected_offer,\r\n            Açıklama: obj.description,\r\n            Statü: status,\r\n            salesRepDetails: obj.sales_rep_details ? obj.sales_rep_details : \"\",\r\n            statusChangeDate: statusChangeDate ? statusChangeDate.toISOString().slice(0, 10) : null,\r\n            finalSalesRepDetails: obj.final_sales_rep_details ? obj.final_sales_rep_details : \"\",\r\n            lastChangeDate: lastChangeDate ? lastChangeDate.toISOString().slice(0, 10) : null,\r\n            submitProcessNum,\r\n            imageURLS: obj.image_urls ? obj.image_urls : null\r\n          }\r\n      })\r\n}\r\n\r\nexport const getBadge = (status)=>{\r\n    switch (status) {\r\n       case 'Onaylandı': return 'success'\r\n       case 'İşleniyor': return 'warning'\r\n       case 'İptal': return 'danger'\r\n       case 'Gönderildi': return 'secondary'\r\n       default: return 'primary'\r\n    }\r\n  }","import {\r\n    CCol,\r\n    CRow,\r\n    CModal,\r\n    CModalTitle,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CButton,\r\n    CFormGroup,\r\n    CLabel,\r\n    CInput,\r\n    CTextarea\r\n  } from '@coreui/react'\r\n\r\nexport default function ApplicationViewModal(props) {\r\n    const { userDetails } = props\r\n    const renderTextArea = (details) => {\r\n      if (details?.submitProcessNum === 2) {\r\n        return (\r\n            <CFormGroup row>\r\n              <CCol>\r\n                <CLabel>Bayi Açıklama</CLabel>\r\n                <CTextarea \r\n                  rows=\"8\"\r\n                  placeholder={userDetails?.Açıklama}\r\n                  readOnly\r\n                />\r\n              </CCol>\r\n              <CCol>\r\n                <CLabel>Satış Desteğin Notları</CLabel>\r\n                <CTextarea\r\n                  rows=\"8\"\r\n                  placeholder={userDetails?.salesRepDetails}\r\n                  readOnly\r\n                />\r\n              </CCol>\r\n            </CFormGroup>\r\n        )\r\n      }\r\n      else if (details?.submitProcessNum === 3) {\r\n        return (\r\n          <CFormGroup>\r\n          <CLabel>Sizin Notlarınız</CLabel>\r\n          <CTextarea \r\n            rows=\"4\"\r\n            placeholder={userDetails?.Açıklama}\r\n            readOnly\r\n          />\r\n        </CFormGroup>\r\n        )\r\n      } else {\r\n        return (\r\n          <CFormGroup>\r\n            <CLabel>Sizin Notlarınız</CLabel>\r\n            <CTextarea \r\n              rows=\"4\"\r\n              placeholder={userDetails?.Açıklama}\r\n              readOnly\r\n            />\r\n          </CFormGroup>\r\n        )\r\n      }\r\n    }\r\n    return (\r\n          <CModal \r\n          size = \"lg\"\r\n          show={props.show}\r\n          onClose={() => props.onClose(!props.show)}\r\n          centered\r\n          >\r\n              <CModalHeader closeButton>\r\n                  <CModalTitle> Başvuru Detayı </CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CRow className = \"justify-content-center align-items-center\">\r\n                <CCol xs=\"12\" sm=\"11\">\r\n                  <CFormGroup row className=\"my-0\">\r\n                    <CCol xs=\"2\">\r\n                      <CFormGroup>\r\n                        <CLabel>ID</CLabel>\r\n                        <CInput placeholder= {userDetails?.ID} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol xs=\"10\">\r\n                      <CFormGroup>\r\n                        <CLabel>İsim</CLabel>\r\n                        <CInput placeholder={userDetails?.İsim} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  <CFormGroup row className=\"my-0\">\r\n                    <CCol xs=\"3\">\r\n                      <CFormGroup>\r\n                        <CLabel>Tarih</CLabel>\r\n                        <CInput placeholder= {userDetails?.Tarih} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol xs=\"2\"> \r\n                      <CFormGroup>\r\n                        <CLabel>Hizmet</CLabel>\r\n                        <CInput placeholder={userDetails?.Tip} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol xs=\"7\">\r\n                      <CFormGroup>\r\n                        <CLabel>Kampanya</CLabel>\r\n                        <CInput placeholder={userDetails?.Kampanya} readOnly />\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  {renderTextArea(userDetails)}\r\n                  <CFormGroup>\r\n                    <CLabel>Satış Desteğin Son Notları</CLabel>\r\n                      <CTextarea \r\n                        rows=\"6\"\r\n                        placeholder={userDetails?.finalSalesRepDetails}\r\n                        readOnly\r\n                      />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                  <CButton color=\"secondary\" onClick={() => props.onClose(!props.show)}>Kapat</CButton>\r\n              </CModalFooter>\r\n          </CModal>\r\n      )\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination\r\n} from '@coreui/react'\r\nimport ApplicationViewModal from '.'\r\nimport { mapDataToTurkish, getBadge } from \"../../components/index\"\r\n\r\nconst BasvuruTakibi = () => {\r\n  // code lines for setting up pagnation\r\n  const queryPage = useLocation().search.match(/sayfa=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  \r\n  const history = useHistory()\r\n  const [usersData, setUsersData] = useState(undefined)\r\n  const [modal, setModal] = useState(false)\r\n  const [modalData, setModalData] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/basvuru/takip?sayfa=${newPage}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage)\r\n    const getData = async () => {\r\n      const res = await fetch(\"http://localhost:8080/bayi/applications\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'authorization' :`Bearer ${document.cookie.slice(8)} `\r\n        }\r\n      })\r\n      if (res.status === 200) {\r\n        const fetchData = await res.json()\r\n        const resData = mapDataToTurkish(fetchData)\r\n        setUsersData(resData)\r\n      }\r\n      setLoading(false)\r\n    };\r\n    getData();\r\n  }, [currentPage, page])\r\n\r\n  return (\r\n    <CRow className = \"d-flex justify-content-center\">\r\n      <ApplicationViewModal show = {modal} userDetails = {modalData} onClose = {setModal} />\r\n      <CCol xl={10}>\r\n      {\r\n        usersData ? \r\n        <CCard>\r\n          <CCardHeader>\r\n            Başvurularınız\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CDataTable\r\n                items={usersData}\r\n                fields={[\r\n                { key: 'İsim', _classes: 'font-weight-bold' },\r\n                'Tarih', 'Tip', 'Statü'\r\n                ]}\r\n                loading = {loading}\r\n                hover\r\n                striped\r\n                itemsPerPage={30}\r\n                activePage={page}\r\n                clickableRows\r\n                onRowClick={(item) => { setModal(true); setModalData(item)}}\r\n                scopedSlots = {{\r\n                'Statü':\r\n                    (item)=>(\r\n                    <td>\r\n                        <CBadge color={getBadge(item.Statü)}> \r\n                        {item.Statü}\r\n                        </CBadge>\r\n                    </td>\r\n                    )\r\n                }}\r\n            />\r\n            <CPagination\r\n                activePage={page}\r\n                onActivePageChange={pageChange}\r\n                pages={15}\r\n                doubleArrows={false} \r\n                align=\"center\"\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        :\r\n        <h1>loading</h1>\r\n      }\r\n\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default BasvuruTakibi;\r\n"],"sourceRoot":""}