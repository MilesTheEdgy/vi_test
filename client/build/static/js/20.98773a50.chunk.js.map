{"version":3,"sources":["pages/login/Login.js"],"names":["LoginErrModal","useState","showModal","closeModal","dispatch","useDispatch","className","show","centered","color","borderColor","onClosed","type","onClick","Login","onUsernameChange","e","setState","username","target","value","onPasswordChange","password","onSubmit","a","props","logoutUser","fetch","method","headers","body","JSON","stringify","state","res","status","json","data","document","cookie","token","userData","userRole","userLoggingin","fillUserInfo","userLoggininErr","this","loginErr","md","name","placeholder","autoComplete","onChange","xs","to","style","width","active","tabIndex","React","Component","connect","reducer","payload"],"mappings":"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","file":"static/js/20.98773a50.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalTitle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport \"./login.css\"\r\n\r\nconst LoginErrModal = () => {\r\n  const [showModal, closeModal] = useState(true)\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className = \"loginerrmodal-body\">\r\n      <CModal\r\n        show={showModal} \r\n        centered= {true}\r\n        color= \"danger\"\r\n        borderColor = \"danger\"\r\n        onClosed = {() => {\r\n          dispatch({type: \"LOGIN-ERROR-CLOSE\"})\r\n          closeModal(false)\r\n        }}\r\n      >\r\n        <div className = \"loginerrmodal-header\">\r\n          <CModalTitle className = \"loginerrmodal-title\">HATALI GİRİŞ</CModalTitle>\r\n        </div>\r\n        <CModalBody>\r\n          Lütfen bilgilerinizi kontrol ederek tekrar deneyin\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton \r\n            color=\"secondary\" \r\n            onClick={() => closeModal(false)}\r\n          >Kapat\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    }\r\n  };\r\n\r\n  onUsernameChange = (e) => {\r\n    this.setState({username: e.target.value});\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n\r\n\r\n  onSubmit = async () => {\r\n    // document.cookie = 'token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n    this.props.logoutUser()\r\n    let res = await fetch(\"http://localhost:8080/login\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization' :'Bearer '\r\n      },\r\n      body: JSON.stringify({\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    if (res.status === 200) {\r\n      let data = await res.json()\r\n      // console.log(\"token from login: \", data.token)\r\n      document.cookie = `vitoken=${data.token}`\r\n      let userData = {\r\n        username: data.username,\r\n        userRole: data.userRole\r\n      }\r\n      this.props.userLoggingin()\r\n      this.props.fillUserInfo(userData)\r\n      // this.props.history.push(\"/anasayfa\")\r\n\r\n    } else {\r\n      this.props.userLoggininErr()\r\n    }\r\n    // if (res.status === 200) {\r\n    //   this.props.userLoggininErr()\r\n    // }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n        <CContainer>\r\n          <CRow className=\"justify-content-center\">\r\n          {\r\n            this.props.loginErr ?\r\n            <LoginErrModal/>\r\n            :\r\n            <> </>\r\n          }\r\n            <CCol md=\"8\">\r\n              <CCardGroup>\r\n                <CCard className=\"p-4\">\r\n                  <CCardBody>\r\n                    <CForm>\r\n                      <h1>Kullanıcı girişi</h1>\r\n                      <p className=\"text-muted\">Hesabınıza giriş yapın</p>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-user\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" placeholder=\"Kullanıcı adı\" autoComplete=\"username\" onChange = {this.onUsernameChange} />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-lock-locked\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"password\" placeholder=\"Şifre\" autoComplete=\"current-password\" onChange = {this.onPasswordChange} />\r\n                      </CInputGroup>\r\n                      <CRow>\r\n                        <CCol xs=\"6\">\r\n                          <CButton color=\"primary\" className=\"px-4\" onClick = {this.onSubmit}>Giriş</CButton>\r\n                        </CCol>\r\n                        <CCol xs=\"6\" className=\"text-right\">\r\n                          <CButton color=\"link\" className=\"px-0\"> <Link to = \"resetpassword/verify\">Şifrenizi unuttunuz mu?</Link></CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n                <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                  <CCardBody className=\"text-center\">\r\n                    <div>\r\n                      <h2>HESAP OLUŞTURUN</h2>\r\n                      <p>Sayfamıza ilk defa giriş yapıyorsanız buradan hesabınızı oluşturabilirsiniz</p>\r\n                      <Link to=\"/register\">\r\n                        <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Şimdi Oluşturun!</CButton>\r\n                      </Link>\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCardGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </div>\r\n    )  \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginErr: state.reducer.loginErr\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userLoggingin : () => {\r\n          dispatch({type: \"LOGIN\", payload: \"hello\"})\r\n      },\r\n    userLoggininErr: () => {\r\n          dispatch({type: \"LOGIN-ERROR\"})\r\n    },\r\n    logoutUser : () => {\r\n      dispatch({type: \"LOGOUT\"})\r\n    },\r\n    fillUserInfo: (data) => {\r\n      dispatch({type: \"FILL_USER_INFO\", payload: data})\r\n    }\r\n  }\r\n}   \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}