schema {
  query: RootQueryType
  mutation: Mutation
}

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type Application {
  product_name: String
  product_barcode: String
  goal: Int
  condition: String
  unit_price: String
  submitter: String
  submitter_pledge: Int
  description: String
  status: String
  joiner: [Joiner]
  submit_date: String
  final_date: String
  status_change_date: String
  application_id: Int
  transaction_id: Int
}

type Joiner {
  name: String
  pledge: Int
}

input JoinerArg {
  name: String
  pledge: Int
}

type Login {
  username: String
  password: String
  token: Token
}

type Mutation {
  addApplication(product: String!, goal: Int!, unit_price: Float!, totalPrice: Float!, submitter_pledge: Int!, conditionOn: Int, conditionGive: Int, description: String!, finalDate: String!): Application
  joinApplication(applicationID: ID!, pledge: Int!): Application
  approveApplication(applicationID: ID!, chosenJoiners: [JoinerArg]!): Application
  deleteApplication(applicationID: ID): Application
  deleteJoin(applicationID: ID): Application
}

type Product {
  Product_name: String
  Barcode: String
  ATC_code: String
}

type RootQueryType {
  login(username: String!, password: String!): Login
  currentUser: User
  user(pharmacyName: String!): User
  users: [User]
  product(searchCriteria: String!): [Product]
  products: [Product]
  application(applicationID: ID, submitter: String, onHold: Boolean): [Application]
  applications: Application
}

type Token {
  username: String
  pharmacy_name: String
  role: String
  token: String
}

type User {
  username: String
  pharmacy_name: String
  balance: Float
}

